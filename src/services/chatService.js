/**
 * AI Chat Service for MakarovFlow
 * Smart context-aware responses
 */

import { journalEntries, tasks, homework, settings } from '../db/database';

/**
 * Parse context string into structured data
 */
const parseContext = (contextString) => {
  const lines = contextString.split('\n');
  const data = {
    hasMoodData: false,
    avgMood: 0,
    avgEnergy: 0,
    avgSleep: 0,
    latestMood: 0,
    latestEnergy: 0,
    latestSleep: 0,
    tasksCount: 0,
    homeworkCount: 0
  };

  lines.forEach(line => {
    if (line.includes('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:')) {
      const match = line.match(/(\d+)\/10/);
      if (match) {
        data.latestMood = parseInt(match[1]);
        data.hasMoodData = true;
      }
    }
    if (line.includes('–≠–Ω–µ—Ä–≥–∏—è:')) {
      const match = line.match(/(\d+)%/);
      if (match) data.latestEnergy = parseInt(match[1]);
    }
    if (line.includes('–°–æ–Ω:')) {
      const match = line.match(/(\d+\.?\d*) —á–∞—Å–æ–≤/);
      if (match) data.latestSleep = parseFloat(match[1]);
    }
    if (line.includes('–°—Ä–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:')) {
      const match = line.match(/(\d+\.?\d*)\/10/);
      if (match) data.avgMood = parseFloat(match[1]);
    }
    if (line.includes('–°—Ä–µ–¥–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è:')) {
      const match = line.match(/(\d+)%/);
      if (match) data.avgEnergy = parseInt(match[1]);
    }
    if (line.includes('–°—Ä–µ–¥–Ω–∏–π —Å–æ–Ω:')) {
      const match = line.match(/(\d+\.?\d*) —á–∞—Å–æ–≤/);
      if (match) data.avgSleep = parseFloat(match[1]);
    }
    if (line.includes('–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')) {
      const match = line.match(/\((\d+)\)/);
      if (match) data.tasksCount = parseInt(match[1]);
    }
    if (line.includes('–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è')) {
      const match = line.match(/\((\d+)\)/);
      if (match) data.homeworkCount = parseInt(match[1]);
    }
  });

  return data;
};

/**
 * Generate personalized mood analysis
 */
const generateMoodAnalysis = (data) => {
  let response = 'üìä **–í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n\n';

  if (data.hasMoodData) {
    // Latest status
    response += `**–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**\n`;
    response += `‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${data.latestMood}/10 ${getMoodEmoji(data.latestMood)}\n`;
    response += `‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è: ${data.latestEnergy}% ${getEnergyEmoji(data.latestEnergy)}\n`;
    response += `‚Ä¢ –°–æ–Ω: ${data.latestSleep}—á ${getSleepEmoji(data.latestSleep)}\n\n`;

    // Average
    if (data.avgMood > 0) {
      response += `**–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ (–Ω–µ–¥–µ–ª—è):**\n`;
      response += `‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${data.avgMood.toFixed(1)}/10\n`;
      response += `‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è: ${data.avgEnergy}%\n`;
      response += `‚Ä¢ –°–æ–Ω: ${data.avgSleep.toFixed(1)}—á\n\n`;
    }

    // Analysis
    response += `**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n`;

    if (data.avgMood < 5) {
      response += '‚ù§Ô∏è –¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é –±—ã–ª–æ –Ω–∏–∑–∫–∏–º. –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ –≥—É–ª—è—Ç—å, –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏, –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ª—é–±–∏–º—ã–º–∏ –¥–µ–ª–∞–º–∏.\n';
    } else if (data.avgMood < 7) {
      response += 'üíõ –ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –µ—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏! –î–æ–±–∞–≤—å –±–æ–ª—å—à–µ —Ä–∞–¥–æ—Å—Ç–∏ –≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n';
    } else {
      response += 'üíö –û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!\n';
    }

    if (data.avgEnergy < 40) {
      response += '‚ö° –ù–∏–∑–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è. –í—ã—Å—ã–ø–∞–π—Å—è (7-8—á), –¥–≤–∏–≥–∞–π—Å—è –±–æ–ª—å—à–µ, –ø–µ–π –≤–æ–¥—É.\n';
    }

    if (data.avgSleep < 7) {
      response += 'üò¥ –¢—ã –º–∞–ª–æ —Å–ø–∏—à—å! –°—Ç–∞—Ä–∞–π—Å—è —Å–ø–∞—Ç—å –º–∏–Ω–∏–º—É–º 7-8 —á–∞—Å–æ–≤.\n';
    } else if (data.avgSleep > 9) {
      response += 'üõè –ú–Ω–æ–≥–æ —Å–Ω–∞ ‚Äî —Ç–æ–∂–µ –Ω–µ –æ—á–µ–Ω—å. 7-8 —á–∞—Å–æ–≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ.\n';
    }
  }

  if (data.tasksCount > 0) {
    response += `\nüìù –£ —Ç–µ–±—è ${data.tasksCount} –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ù–µ –∑–∞–±—É–¥—å –∏—Ö –≤—ã–ø–æ–ª–Ω–∏—Ç—å!`;
  }

  if (data.homeworkCount > 0) {
    response += `\nüìö ${data.homeworkCount} –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∂–¥—É—Ç —Ç–µ–±—è.`;
  }

  return response;
};

const getMoodEmoji = (mood) => {
  if (mood >= 8) return 'üòä';
  if (mood >= 6) return 'üôÇ';
  if (mood >= 4) return 'üòê';
  return 'üòî';
};

const getEnergyEmoji = (energy) => {
  if (energy >= 70) return '‚ö°';
  if (energy >= 40) return 'üîã';
  return 'ü™´';
};

const getSleepEmoji = (sleep) => {
  if (sleep >= 7 && sleep <= 9) return '‚úÖ';
  if (sleep < 6) return '‚ö†Ô∏è';
  return 'üí§';
};

/**
 * Get context from user's data
 */
const getUserContext = async () => {
  try {
    const [recentEntries, recentTasks, recentHomework, userSettings] = await Promise.all([
      journalEntries.getLastN(14), // –£–≤–µ–ª–∏—á–∏–ª –¥–æ 14 –¥–Ω–µ–π –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
      tasks.getToday(),
      homework.getActive(),
      settings.get()
    ]);

    let context = '–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n';

    // Recent mood and stats
    if (recentEntries.length > 0) {
      const latestEntry = recentEntries[0];
      const avgMood = recentEntries.reduce((sum, e) => sum + e.mood, 0) / recentEntries.length;
      const avgEnergy = recentEntries.reduce((sum, e) => sum + (e.energy || 50), 0) / recentEntries.length;
      const avgSleep = recentEntries.reduce((sum, e) => sum + (e.sleepHours || 7), 0) / recentEntries.length;

      context += `\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ:
- –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${latestEntry.mood}/10 ${latestEntry.moodEmoji}
- –≠–Ω–µ—Ä–≥–∏—è: ${latestEntry.energy}%
- –°–æ–Ω: ${latestEntry.sleepHours} —á–∞—Å–æ–≤

–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –Ω–µ–¥–µ–ª—é:
- –°—Ä–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${avgMood.toFixed(1)}/10
- –°—Ä–µ–¥–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è: ${avgEnergy.toFixed(0)}%
- –°—Ä–µ–¥–Ω–∏–π —Å–æ–Ω: ${avgSleep.toFixed(1)} —á–∞—Å–æ–≤\n`;

      // üîÆ ADD PREDICTION TO CONTEXT
      if (recentEntries.length >= 7) {
        const { predictTomorrowMood } = await import('./aiService');
        const prediction = predictTomorrowMood(recentEntries);
        if (prediction) {
          context += `\n–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞:
- –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${prediction.predictedMood}/10 (${prediction.trendText})
- –¢—Ä–µ–Ω–¥: ${prediction.trendIcon}
- –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞: ${prediction.confidence}%\n`;
        }
      }

      // üìä ADD TASK CORRELATION TO CONTEXT
      if (recentEntries.length >= 7) {
        const { analyzeTaskMoodCorrelation } = await import('./aiService');
        const correlation = await analyzeTaskMoodCorrelation(recentEntries);
        if (correlation && correlation.correlation) {
          context += `\n–°–≤—è–∑—å –∑–∞–¥–∞—á –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:
- –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: ${correlation.correlation > 0.5 ? '–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è' : correlation.correlation < -0.3 ? '–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è' : '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è'}
- –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á: ${correlation.avgCompletionRate}%\n`;
        }
      }
    }

    // Today's tasks
    if (recentTasks.length > 0) {
      context += `\n–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (${recentTasks.length}):\n`;
      recentTasks.slice(0, 5).forEach(task => {
        context += `- ${task.title}\n`;
      });
    }

    // Active homework
    if (recentHomework.length > 0) {
      context += `\n–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è (${recentHomework.length}):\n`;
      recentHomework.slice(0, 3).forEach(hw => {
        context += `- ${hw.subject}: ${hw.description || '–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n`;
      });
    }

    return context;
  } catch (error) {
    console.error('Failed to get user context:', error);
    return '';
  }
};

/**
 * Send message to AI and get response
 */
export const sendMessage = async (userMessage, conversationHistory = []) => {
  try {
    // Get user context
    const context = await getUserContext();

    // Try to use free Hugging Face API (no credit card needed!)
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–æ–¥–µ–ª—å Mistral-7B —á–µ—Ä–µ–∑ Hugging Face Inference API
      const response = await fetch('https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          inputs: `<s>[INST] –¢—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ MindFlow –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ü–æ–º–æ–≥–∞–π —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é, –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∫—Ä–∞—Ç–∫–æ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), —ç–º–ø–∞—Ç–∏—á–Ω–æ.

${context}

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userMessage} [/INST]`,
          parameters: {
            max_new_tokens: 250,
            temperature: 0.7,
            top_p: 0.95,
            return_full_text: false
          }
        })
      });

      if (response.ok) {
        const data = await response.json();
        let aiMessage = '';

        if (Array.isArray(data) && data[0]?.generated_text) {
          aiMessage = data[0].generated_text.trim();
        } else if (data.generated_text) {
          aiMessage = data.generated_text.trim();
        }

        // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–ª–∏ —Å—Ç—Ä–∞–Ω–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        if (aiMessage && aiMessage.length > 10 && !aiMessage.includes('[/INST]')) {
          // –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ —Ä—É—Å—Å–∫–∏–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏ –æ—á–∏—â–∞–µ–º
          aiMessage = aiMessage.replace(/\[INST\].*?\[\/INST\]/g, '').trim();

          return {
            success: true,
            message: aiMessage
          };
        }
      }
    } catch (apiError) {
      console.log('Hugging Face API error, using fallback:', apiError.message);
    }

    // Fallback to smart local responses
    const response = generateFallbackResponse(userMessage, context);

    return {
      success: true,
      message: response
    };
  } catch (error) {
    console.error('AI chat error:', error);
    return {
      success: true,
      message: generateFallbackResponse(userMessage, '')
    };
  }
};

/**
 * Generate advanced contextual response using AI-like logic
 */
const generateSmartResponse = (userMessage, contextData) => {
  const lowerMessage = userMessage.toLowerCase();

  // –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π
  if (contextData.hasMoodData) {
    const moodTrend = contextData.avgMood;
    const energyTrend = contextData.avgEnergy;
    const sleepQuality = contextData.avgSleep;

    // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
    if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π') || lowerMessage.includes('hi')) {
      if (moodTrend < 5) {
        return `–ü—Ä–∏–≤–µ—Ç! –í–∏–∂—É, —á—Ç–æ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –±—ã–ª–æ ${moodTrend.toFixed(1)}/10. –•–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º, —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç? –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∏ –¥–∞—Ç—å —Å–æ–≤–µ—Ç—ã! üíô`;
      } else if (moodTrend >= 7) {
        return `–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∏–¥–µ—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${moodTrend.toFixed(1)}/10)! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è? üòä`;
      } else {
        return `–ü—Ä–∏–≤–µ—Ç! –¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ—Ä–∂–∏—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ ${moodTrend.toFixed(1)}/10. –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –¥–µ–Ω—å –µ—â—ë –ª—É—á—à–µ! –û —á—ë–º —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å? ‚ú®`;
      }
    }

    if (lowerMessage.includes('–∫–∞–∫ –¥–µ–ª–∞') || lowerMessage.includes('—á—Ç–æ –Ω–æ–≤–æ–≥–æ')) {
      let response = 'üìä –í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n';
      response += `üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${moodTrend.toFixed(1)}/10 ${moodTrend >= 7 ? '(–æ—Ç–ª–∏—á–Ω–æ!)' : moodTrend >= 5 ? '(–Ω–µ–ø–ª–æ—Ö–æ)' : '(–º–æ–∂–Ω–æ –ª—É—á—à–µ)'}\n`;
      response += `‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${energyTrend}% ${energyTrend >= 60 ? '(—Ö–æ—Ä–æ—à–æ!)' : '(–Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞)'}\n`;
      response += `üò¥ –°–æ–Ω: ${sleepQuality.toFixed(1)}—á ${sleepQuality >= 7 ? '(–æ—Ç–ª–∏—á–Ω–æ!)' : '(–º–∞–ª–æ–≤–∞—Ç–æ)'}\n\n`;

      // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      if (energyTrend < 40) {
        response += 'üí° –°–æ–≤–µ—Ç: –¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –Ω–∏–∑–∫–∞—è. –ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è 15 –º–∏–Ω—É—Ç –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –ª—ë–≥–∫—É—é –∑–∞—Ä—è–¥–∫—É!';
      } else if (sleepQuality < 7) {
        response += 'üí° –°–æ–≤–µ—Ç: –°–ø–∏ —Ö–æ—Ç—è –±—ã 7-8 —á–∞—Å–æ–≤! –≠—Ç–æ —Å–∏–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.';
      } else if (moodTrend < 6) {
        response += 'üí° –°–æ–≤–µ—Ç: –ü–æ–ø—Ä–æ–±—É–π –∑–∞–ø–∏—Å–∞—Ç—å 3 –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω —Å–µ–≥–æ–¥–Ω—è. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç!';
      } else {
        response += 'üí° –¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üåü';
      }

      return response;
    }
  }

  // üîÆ PREDICTION QUESTIONS
  if (lowerMessage.includes('–ø—Ä–æ–≥–Ω–æ–∑') || lowerMessage.includes('–∑–∞–≤—Ç—Ä–∞') || lowerMessage.includes('–ø—Ä–µ–¥—Å–∫–∞–∂')) {
    if (contextData.hasMoodData) {
      // Get prediction from context
      const lines = context.split('\n');
      const predictionLine = lines.find(l => l.includes('–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ'));
      if (predictionLine) {
        const match = predictionLine.match(/(\d+\.?\d*)\/10 \((.+?)\)/);
        if (match) {
          const score = parseFloat(match[1]);
          const trend = match[2];

          let response = `üîÆ **–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:**\n\n`;
          response += `–¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç **${trend}** (${score}/10).\n\n`;

          if (score < contextData.latestMood - 0.5) {
            response += `üìâ –Ø –≤–∏–∂—É –≤–æ–∑–º–æ–∂–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ. **–ß—Ç–æ –¥–µ–ª–∞—Ç—å:**\n`;
            response += `‚Ä¢ –õ–æ–∂–∏—Å—å —Å–ø–∞—Ç—å –ø–æ—Ä–∞–Ω—å—à–µ —Å–µ–≥–æ–¥–Ω—è\n`;
            response += `‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π —á—Ç–æ-—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ–µ –Ω–∞ —É—Ç—Ä–æ\n`;
            response += `‚Ä¢ –ù–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π —Å–µ–±—è –∑–∞–¥–∞—á–∞–º–∏ –∑–∞–≤—Ç—Ä–∞\n`;
          } else if (score > contextData.latestMood + 0.5) {
            response += `üìà –û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n`;
            response += `‚Ä¢ –ò–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á!\n`;
            response += `‚Ä¢ –ó–∞–π–º–∏—Å—å —Ç–µ–º, —á—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª\n`;
            response += `‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ —Å —Ä–µ–∂–∏–º–æ–º\n`;
          } else {
            response += `‚û°Ô∏è –°—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–µ–∂–∏–º–æ–º —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!`;
          }

          return response;
        }
      }
    }
    return 'üîÆ –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –º–Ω–µ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 7 –¥–Ω–µ–π –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!';
  }

  // üìä TASK CORRELATION QUESTIONS
  if (lowerMessage.includes('–∑–∞–¥–∞—á') && (lowerMessage.includes('–≤–ª–∏—è') || lowerMessage.includes('—Å–≤—è–∑') || lowerMessage.includes('–Ω–∞—Å—Ç—Ä–æ–µ–Ω'))) {
    const lines = context.split('\n');
    const correlationLine = lines.find(l => l.includes('–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è:'));
    const completionLine = lines.find(l => l.includes('–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'));

    if (correlationLine && completionLine) {
      const isPositive = correlationLine.includes('–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è');
      const isNegative = correlationLine.includes('–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è');
      const completionMatch = completionLine.match(/(\d+)%/);
      const completion = completionMatch ? completionMatch[1] : '?';

      let response = `üìä **–ê–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:**\n\n`;

      if (isPositive) {
        response += `‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á **–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –≤–ª–∏—è–µ—Ç** –Ω–∞ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!\n\n`;
        response += `–ö–æ–≥–¥–∞ —Ç—ã –≤—ã–ø–æ–ª–Ω—è–µ—à—å –∑–∞–¥–∞—á–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª—É—á—à–µ. –¢—ã –≤ —Å—Ä–µ–¥–Ω–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—à—å **${completion}%** –∑–∞–¥–∞—á.\n\n`;
        response += `**–°–æ–≤–µ—Ç:** –ù–∞—á–∏–Ω–∞–π –¥–µ–Ω—å —Å –º–∞–ª–µ–Ω—å–∫–æ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π momentum!`;
      } else if (isNegative) {
        response += `‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á **—Å–Ω–∏–∂–∞–µ—Ç** –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.\n\n`;
        response += `–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –±–µ—Ä—ë—à—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–∞ —Å–µ–±—è. –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: **${completion}%**.\n\n`;
        response += `**–°–æ–≤–µ—Ç:** –£–º–µ–Ω—å—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –Ω–∞ –¥–µ–Ω—å. –õ—É—á—à–µ 3 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö, —á–µ–º 10 –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö!`;
      } else {
        response += `‚û°Ô∏è –°–≤—è–∑—å –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º **–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è**.\n\n`;
        response += `–¢–≤–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: **${completion}%**. –ó–∞–¥–∞—á–∏ –Ω–µ —Å–∏–ª—å–Ω–æ –≤–ª–∏—è—é—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.\n\n`;
        response += `**–°–æ–≤–µ—Ç:** –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –∑–∞–¥–∞—á–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã!`;
      }

      return response;
    }

    return 'üìä –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–≤—è–∑–∏ –∑–∞–¥–∞—á –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö. –ó–∞–ø–æ–ª–Ω—è–π –¥–Ω–µ–≤–Ω–∏–∫ –∏ –æ—Ç–º–µ—á–∞–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏!';
  }

  // –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
  if (lowerMessage.includes('–º–æ—Ç–∏–≤–∞—Ü') || lowerMessage.includes('–Ω–µ —Ö–æ—á—É') || lowerMessage.includes('–ª–µ–Ω—å')) {
    const tips = [
      'üéØ –ü—Ä–∞–≤–∏–ª–æ 2 –º–∏–Ω—É—Ç: –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –∑–∞–π–º—ë—Ç –º–µ–Ω—å—à–µ 2 –º–∏–Ω—É—Ç - —Å–¥–µ–ª–∞–π –µ—ë –°–ï–ô–ß–ê–°!',
      'üî• –ù–∞—á–Ω–∏ —Å —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —à–∞–≥–∞. –î–∞–∂–µ 5 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã –∑–∞–ø—É—Å—Ç—è—Ç momentum!',
      'üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∏—Ç –ü–û–°–õ–ï –¥–µ–π—Å—Ç–≤–∏—è, –∞ –Ω–µ –¥–æ –Ω–µ–≥–æ. –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–Ω–∏!',
      'üìù –†–∞–∑–¥–µ–ª–∏ –±–æ–ª—å—à—É—é –∑–∞–¥–∞—á—É –Ω–∞ –∫—Ä–æ—à–µ—á–Ω—ã–µ —à–∞–≥–∏. –°—ä–µ—à—å —Å–ª–æ–Ω–∞ –ø–æ –∫—É—Å–æ—á–∫–∞–º!',
      '‚è∞ –¢–µ—Ö–Ω–∏–∫–∞ Pomodoro: 25 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã, 5 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π!'
    ];
    return tips[Math.floor(Math.random() * tips.length)];
  }

  if (lowerMessage.includes('—Å—Ç—Ä–µ—Å—Å') || lowerMessage.includes('—Ç—Ä–µ–≤–æ–∂') || lowerMessage.includes('–≤–æ–ª–Ω—É')) {
    return 'üßò –ü–æ–ø—Ä–æ–±—É–π —Ç–µ—Ö–Ω–∏–∫—É –¥—ã—Ö–∞–Ω–∏—è "4-7-8":\n\n1Ô∏è‚É£ –í–¥–æ—Ö –Ω–∞ 4 —Å—á—ë—Ç–∞\n2Ô∏è‚É£ –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 7 —Å—á—ë—Ç–æ–≤\n3Ô∏è‚É£ –í—ã–¥–æ—Ö –Ω–∞ 8 —Å—á—ë—Ç–æ–≤\n\n–ü–æ–≤—Ç–æ—Ä–∏ 3-4 —Ä–∞–∑–∞. –≠—Ç–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–∞—Ä–∞—Å–∏–º–ø–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ —Å–Ω–∏–∂–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å. –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—É—á–Ω–æ –¥–æ–∫–∞–∑–∞–Ω–æ! üíô';
  }

  if (lowerMessage.includes('—Å–æ–Ω') || lowerMessage.includes('–±–µ—Å—Å–æ–Ω–Ω') || lowerMessage.includes('–Ω–µ —Å–ø–ª—é')) {
    return 'üò¥ –î–ª—è –∫—Ä–µ–ø–∫–æ–≥–æ —Å–Ω–∞:\n\n‚úÖ –õ–æ–∂–∏—Å—å –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è\n‚úÖ –ù–∏–∫–∞–∫–∏—Ö –≥–∞–¥–∂–µ—Ç–æ–≤ –∑–∞ —á–∞—Å –¥–æ —Å–Ω–∞\n‚úÖ –ü—Ä–æ–≤–µ—Ç—Ä–∏ –∫–æ–º–Ω–∞—Ç—É (18-20¬∞C –∏–¥–µ–∞–ª—å–Ω–æ)\n‚úÖ –ü–æ–ø—Ä–æ–±—É–π –º–µ–¥–∏—Ç–∞—Ü–∏—é –∏–ª–∏ —á—Ç–µ–Ω–∏–µ\n‚úÖ –ò–∑–±–µ–≥–∞–π –∫–æ—Ñ–µ–∏–Ω–∞ –ø–æ—Å–ª–µ 15:00\n\n–¢–≤–æ–π –º–æ–∑–≥ —Å–∫–∞–∂–µ—Ç —Å–ø–∞—Å–∏–±–æ! üåô';
  }

  if (lowerMessage.includes('–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω') || lowerMessage.includes('—Ä–∞–±–æ—Ç') || lowerMessage.includes('—É—á—ë–±')) {
    return 'üìö –õ–∞–π—Ñ—Ö–∞–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:\n\nüéØ –°—ä–µ—à—å –ª—è–≥—É—à–∫—É —É—Ç—Ä–æ–º (—Å–∞–º–æ–µ —Å–ª–æ–∂–Ω–æ–µ –¥–µ–ª–æ –ø–µ—Ä–≤—ã–º)\n‚è∞ Pomodoro: 25 –º–∏–Ω —Ä–∞–±–æ—Ç—ã / 5 –º–∏–Ω –æ—Ç–¥—ã—Ö\nüìµ –û—Ç–∫–ª—é—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏\n‚úÖ –ù–µ –±–æ–ª—å—à–µ 3 –≥–ª–∞–≤–Ω—ã—Ö –∑–∞–¥–∞—á –Ω–∞ –¥–µ–Ω—å\nüéµ –ü–æ–ø—Ä–æ–±—É–π —Ñ–æ–Ω–æ–≤—ã–π –±–µ–ª—ã–π —à—É–º –∏–ª–∏ lo-fi\n\n–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ ‚Üí –±–æ–ª—å—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! üöÄ';
  }

  if (lowerMessage.includes('—ç–Ω–µ—Ä–≥–∏') || lowerMessage.includes('—É—Å—Ç–∞–ª') || lowerMessage.includes('—Å–∏–ª –Ω–µ—Ç')) {
    return '‚ö° –ü–æ–¥–∑–∞—Ä—è–¥–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏:\n\nüíß –í—ã–ø–µ–π –≤–æ–¥—ã (–æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ = —É—Å—Ç–∞–ª–æ—Å—Ç—å)\nüö∂ –ü—Ä–æ–≥—É–ª–∫–∞ 10-15 –º–∏–Ω—É—Ç –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ\nü•ó –ü–µ—Ä–µ–∫—É—Å–∏ —á–µ–º-—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–º (–æ—Ä–µ—Ö–∏, —Ñ—Ä—É–∫—Ç—ã)\nüßò 5 –º–∏–Ω—É—Ç —Ä–∞—Å—Ç—è–∂–∫–∏ –∏–ª–∏ –ª—ë–≥–∫–æ–π –∑–∞—Ä—è–¥–∫–∏\n‚òÄÔ∏è –ë–æ–ª—å—à–µ –¥–Ω–µ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞\n\n–¢–≤–æ—ë —Ç–µ–ª–æ - —Ç–≤–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç! –ó–∞–±–æ—Ç—å—Å—è –æ –Ω—ë–º üí™';
  }

  return null; // –í–µ—Ä–Ω—ë—Ç null –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
};

/**
 * Generate smart response based on keywords and context
 */
const generateFallbackResponse = (userMessage, context) => {
  const lowerMessage = userMessage.toLowerCase();

  // Extract context data
  const contextData = parseContext(context);

  // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–º–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const smartResponse = generateSmartResponse(userMessage, contextData);
  if (smartResponse) return smartResponse;

  // Analyze mood trends
  if (contextData.hasMoodData && (lowerMessage.includes('–∞–Ω–∞–ª–∏–∑') || lowerMessage.includes('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫') || lowerMessage.includes('–∫–∞–∫ –¥–µ–ª–∞'))) {
    return generateMoodAnalysis(contextData);
  }

  // Greeting
  if (lowerMessage.match(/^(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hi|hello|hey)/)) {
    return '–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –≤ MakarovFlow. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –∞–Ω–∞–ª–∏–∑–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –¥–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. –û —á—ë–º —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?';
  }

  // Thanks
  if (lowerMessage.match(/(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä)/)) {
    return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –ø–æ–º–æ—á—å. –ï—Å–ª–∏ –±—É–¥—É—Ç –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã ‚Äî –æ–±—Ä–∞—â–∞–π—Å—è! üòä';
  }

  // Mood-related
  if (lowerMessage.includes('–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏') || lowerMessage.includes('—á—É–≤—Å—Ç–≤—É') || lowerMessage.includes('–≥—Ä—É—Å—Ç–Ω') || lowerMessage.includes('–ø–ª–æ—Ö')) {
    return '–ü–æ–Ω–∏–º–∞—é —Ç–µ–±—è. –ü–æ–ø—Ä–æ–±—É–π –≤—ã–π—Ç–∏ –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É, –ø–æ—Å–ª—É—à–∞—Ç—å –ª—é–±–∏–º—É—é –º—É–∑—ã–∫—É –∏–ª–∏ –∑–∞–Ω—è—Ç—å—Å—è —á–µ–º-—Ç–æ –ø—Ä–∏—è—Ç–Ω—ã–º. –î–≤–∏–∂–µ–Ω–∏–µ –∏ —Å–≤–µ–∂–∏–π –≤–æ–∑–¥—É—Ö –ø–æ–º–æ–≥–∞—é—Ç! –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –æ—Å—Ç–∞–≤–∞–π—Å—è –æ–¥–∏–Ω –Ω–∞ –æ–¥–∏–Ω —Å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏.';
  }

  // Energy-related
  if (lowerMessage.includes('—ç–Ω–µ—Ä–≥–∏') || lowerMessage.includes('—É—Å—Ç–∞–ª') || lowerMessage.includes('—Å–∏–ª') || lowerMessage.includes('–≤—è–ª–æ—Å—Ç')) {
    return '–ù–∏–∑–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –í–∞–∂–Ω–æ –≤—ã—Å—ã–ø–∞—Ç—å—Å—è (7-8 —á–∞—Å–æ–≤), –ø–∏—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã –∏ –¥–≤–∏–≥–∞—Ç—å—Å—è. –î–∞–∂–µ 10 –º–∏–Ω—É—Ç –∑–∞—Ä—è–¥–∫–∏ –ø–æ–º–æ–≥—É—Ç –≤–∑–±–æ–¥—Ä–∏—Ç—å—Å—è. –°–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤ –∏ –ø–æ–¥—ã—à–∏ —Å–≤–µ–∂–∏–º –≤–æ–∑–¥—É—Ö–æ–º.';
  }

  // Sleep-related
  if (lowerMessage.includes('—Å–æ–Ω') || lowerMessage.includes('—Å–ø–ª—é') || lowerMessage.includes('–±–µ—Å—Å–æ–Ω–Ω–∏') || lowerMessage.includes('–Ω–µ –≤—ã—Å—ã–ø')) {
    return '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω ‚Äî –æ—Å–Ω–æ–≤–∞ —Ö–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è. –ü–æ–ø—Ä–æ–±—É–π: –ª–æ–∂–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è, –∏–∑–±–µ–≥–∞—Ç—å –≥–∞–¥–∂–µ—Ç–æ–≤ –∑–∞ —á–∞—Å –¥–æ —Å–Ω–∞, –ø—Ä–æ–≤–µ—Ç—Ä–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É. –ú–æ–∂–µ—Ç –ø–æ–º–æ—á—å –º–µ–¥–∏—Ç–∞—Ü–∏—è, —á—Ç–µ–Ω–∏–µ –∏–ª–∏ —Ç—ë–ø–ª—ã–π –¥—É—à.';
  }

  // Workout related
  if (lowerMessage.includes('—Ç—Ä–µ–Ω–∏—Ä') || lowerMessage.includes('—Å–ø–æ—Ä—Ç') || lowerMessage.includes('–∑–∞–ª') || lowerMessage.includes('—É–ø—Ä–∞–∂–Ω–µ–Ω–∏')) {
    return '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–æ! –û–Ω–∏ —É–ª—É—á—à–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —ç–Ω–µ—Ä–≥–∏—é –∏ —Å–æ–Ω. –ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ: 15-20 –º–∏–Ω—É—Ç –ª—ë–≥–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å, –∞ –Ω–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å. –î–∞–∂–µ –ø—Ä–æ–≥—É–ª–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è!';
  }

  // Tasks/productivity
  if (lowerMessage.includes('–∑–∞–¥–∞—á') || lowerMessage.includes('–¥–µ–ª') || lowerMessage.includes('–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω') || lowerMessage.includes('—Ä–∞–±–æ—Ç')) {
    return '–†–∞–∑–±–µ–π –±–æ–ª—å—à–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏. –ù–∞—á–Ω–∏ —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ —Ä–∏—Ç–º. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª–æ 2 –º–∏–Ω—É—Ç: –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –∑–∞–π–º—ë—Ç –º–µ–Ω—å—à–µ 2 –º–∏–Ω—É—Ç ‚Äî —Å–¥–µ–ª–∞–π –µ—ë —Å—Ä–∞–∑—É. –î–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –≤—Å–µ–≥–¥–∞ –ª—É—á—à–µ, —á–µ–º –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å!';
  }

  // Motivation
  if (lowerMessage.includes('–º–æ—Ç–∏–≤–∞—Ü') || lowerMessage.includes('–Ω–µ —Ö–æ—á–µ—Ç') || lowerMessage.includes('–ª–µ–Ω—å') || lowerMessage.includes('–ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü')) {
    return '–ú–æ—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∏—Ç –ü–û–°–õ–ï –¥–µ–π—Å—Ç–≤–∏—è, –∞ –Ω–µ –¥–æ –Ω–µ–≥–æ! –ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ ‚Äî 5 –º–∏–Ω—É—Ç, –æ–¥–∏–Ω –ø—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞. Momentum –ø—Ä–∏–¥—ë—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ. –û–±–µ—â–∞–π —Å–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç ‚Äî —á–∞—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏—à—å –¥–∞–ª—å—à–µ. –¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è! üí™';
  }

  // Study/learning
  if (lowerMessage.includes('—É—á—ë–±') || lowerMessage.includes('—É—á–∏') || lowerMessage.includes('—ç–∫–∑–∞–º–µ–Ω') || lowerMessage.includes('–¥–æ–º–∞—à–∫')) {
    return '–î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —É—á—ë–±—ã –ø–æ–ø—Ä–æ–±—É–π —Ç–µ—Ö–Ω–∏–∫—É Pomodoro: 25 –º–∏–Ω—É—Ç —É—á—ë–±—ã, 5 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö. –î–µ–ª–∞–π –∑–∞–º–µ—Ç–∫–∏ –æ—Ç —Ä—É–∫–∏ ‚Äî —Ç–∞–∫ –ª—É—á—à–µ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è. –ò –Ω–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –ø–µ—Ä–µ—Ä—ã–≤—ã, —Å–æ–Ω –∏ –≤–æ–¥—É!';
  }

  // Focus/concentration
  if (lowerMessage.includes('—Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á') || lowerMessage.includes('–∫–æ–Ω—Ü–µ–Ω—Ç—Ä') || lowerMessage.includes('–æ—Ç–≤–ª–µ–∫–∞') || lowerMessage.includes('–≤–Ω–∏–º–∞–Ω–∏')) {
    return '–î–ª—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏: —É–±–µ—Ä–∏ –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã (—Ç–µ–ª–µ—Ñ–æ–Ω, —Å–æ—Ü—Å–µ—Ç–∏), —Ä–∞–±–æ—Ç–∞–π –±–ª–æ–∫–∞–º–∏ –ø–æ 25-30 –º–∏–Ω—É—Ç, –¥–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤—ã. –ü–æ–ø—Ä–æ–±—É–π –±–µ–ª—ã–π —à—É–º –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω—É—é –º—É–∑—ã–∫—É. –û–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –∑–∞ —Ä–∞–∑!';
  }

  // Stress/anxiety
  if (lowerMessage.includes('—Å—Ç—Ä–µ—Å—Å') || lowerMessage.includes('—Ç—Ä–µ–≤–æ–∂') || lowerMessage.includes('–≤–æ–ª–Ω—É') || lowerMessage.includes('–±–µ—Å–ø–æ–∫–æ')) {
    return '–ü—Ä–∏ —Å—Ç—Ä–µ—Å—Å–µ –ø–æ–º–æ–≥–∞–µ—Ç: –≥–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ (4 —Å—á—ë—Ç–∞ –≤–¥–æ—Ö, 4 –∑–∞–¥–µ—Ä–∂–∫–∞, 4 –≤—ã–¥–æ—Ö), –ø—Ä–æ–≥—É–ª–∫–∞, —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –±–ª–∏–∑–∫–∏–º–∏, –∑–∞–ø–∏—Å—å –º—ã—Å–ª–µ–π –Ω–∞ –±—É–º–∞–≥–µ. –ü–æ–º–Ω–∏: —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ, –∏ —Ç—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è. –ï—Å–ª–∏ —Ç—è–∂–µ–ª–æ ‚Äî –æ–±—Ä–∞—Ç–∏—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.';
  }

  // Help/how to use
  if (lowerMessage.includes('–∫–∞–∫') && (lowerMessage.includes('—Ä–∞–±–æ—Ç–∞') || lowerMessage.includes('–∏—Å–ø–æ–ª—å–∑') || lowerMessage.includes('–ø–æ–º–æ'))) {
    return '–Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ–∏ –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ –∏ –ø–æ–º–æ–≥–∞—é —Å —Å–æ–≤–µ—Ç–∞–º–∏. –°–ø—Ä–∞—à–∏–≤–∞–π –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏, —ç–Ω–µ—Ä–≥–∏–∏, —Å–Ω–µ, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –ø—Ä–∏–≤—ã—á–∫–∞—Ö. –Ø –≤–∏–∂—É —Ç–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –º–æ–≥—É –¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!';
  }

  // What can you do
  if (lowerMessage.includes('—á—Ç–æ —Ç—ã') && (lowerMessage.includes('—É–º–µ–µ') || lowerMessage.includes('–º–æ–∂–µ—à—å'))) {
    return '–Ø –º–æ–≥—É: –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —ç–Ω–µ—Ä–≥–∏—é, –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —Å–Ω—É –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å, –ø–æ–º–æ–≥–∞—Ç—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞—á, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏. –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–π!';
  }

  // Default response
  return '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –Ø –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–º–æ–≥–∞—é —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏, —ç–Ω–µ—Ä–≥–∏–∏, —Å–Ω–µ, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –ø—Ä–æ —Ç–≤–æ—ë —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏–ª–∏ –ø—Ä–∏–≤—ã—á–∫–∏, –∏ —è –¥–∞–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç! üòä';
};

/**
 * Get suggested questions based on user data
 */
export const getSuggestedQuestions = async () => {
  try {
    const [recentEntries, todayTasks] = await Promise.all([
      journalEntries.getLastN(14),
      tasks.getToday()
    ]);

    const suggestions = [];

    // üîÆ ALWAYS SHOW PREDICTION if enough data
    if (recentEntries.length >= 7) {
      suggestions.push('–ö–∞–∫–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞?');
    }

    // üìä SHOW TASK CORRELATION if has tasks and entries
    if (recentEntries.length >= 7 && todayTasks.length > 0) {
      suggestions.push('–ö–∞–∫ –∑–∞–¥–∞—á–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –º–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?');
    }

    // If low mood recently
    if (recentEntries.length > 0) {
      const avgMood = recentEntries.reduce((sum, e) => sum + e.mood, 0) / recentEntries.length;
      if (avgMood < 6) {
        suggestions.push('–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?');
        suggestions.push('–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ —É–ø–∞–¥–∫–µ —Å–∏–ª?');
      }
    }

    // If has tasks
    if (todayTasks.length > 0) {
      suggestions.push('–ö–∞–∫ –±—ã—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–µ–µ?');
      suggestions.push('–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–µ–π?');
    }

    // Always available
    if (suggestions.length < 4) {
      suggestions.push('–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞?');
      suggestions.push('–ö–∞–∫–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ–º–æ–≥—É—Ç –º–Ω–µ?');
    }

    return suggestions.slice(0, 4);
  } catch (error) {
    return [
      '–ö–∞–∫–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞?',
      '–ö–∞–∫ –∑–∞–¥–∞—á–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –º–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?',
      '–ö–∞–∫ –±—ã—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–µ–µ?',
      '–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞?'
    ];
  }
};
